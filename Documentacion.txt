Repositorio: 

    HTTPS:
    https://github.com/thecodearchitectweb/Conexion-Digital.git

    SSH:
    git@github.com:thecodearchitectweb/Conexion-Digital.git

    GitHub CLI
    gh repo clone thecodearchitectweb/Conexion-Digital



    git config --global user.email "thecodearchitect.web@gmail.com"
    git config --global user.name "Alex Alejandro Oviedo Gonzalez"


Para ver ramas disponibles en GitHGub

    Primero descargamos, Descarga todas las actualizaciones de todas las ramas remotas, pero sin fusionarlas con tu c√≥digo local. 
    
        git fetch --all

    Para cambiar de ramas utilizamos

        git switch (Rama a la cual quiere cambiar)

    Este comando fusiona (merge) los cambios m√°s recientes de la rama remota origin/develop con tu rama develop local. tu escoges la rama.

        git merge origin/develop

    Subir los cambios a la rama remota

        git push origin develop

    Si es una nueva rama que a√∫n no existe en GitHub, usa:

        git push --set-upstream origin develop


RESUMEN

    1Ô∏è‚É£ Verificaste la rama ‚Üí git branch
    2Ô∏è‚É£ Revisaste cambios pendientes ‚Üí git status
    3Ô∏è‚É£ Agregaste archivos al staging ‚Üí git add .
    4Ô∏è‚É£ Hiciste un commit ‚Üí git commit -m "mensaje"
    5Ô∏è‚É£ Subiste los cambios ‚Üí git push origin develop




    1Ô∏è‚É£   git checkout -b develop ‚Üí Crea y cambia a la rama develop desde main.
    2Ô∏è‚É£   git push --set-upstream origin develop ‚Üí Sube la rama develop al remoto y la vincula para futuros push/pull. üöÄ



********************************************************************************************************************************

CREACION DE RAMAS POR CONSOLA, BUENAS PRACTICAS.

    Renombrar la rama master

        # Renombrar la rama master a main localmente
        git branch -m master main  

        # Actualizar en el remoto
        git push origin -u main  

        # Eliminar la referencia a master en remoto (si exist√≠a)
        git push origin --delete master  

        # Ajustar la rama predeterminada en GitHub/GitLab
        git remote set-head origin main  




    # Crear la rama develop desde main
        git checkout -b develop  # Crea y cambia a la rama "develop" desde "main".
        git push --set-upstream origin develop  # Sube "develop" al remoto y la vincula para futuros push/pull.

    # Crear ramas de m√≥dulos desde develop
        git checkout develop  # Cambia a la rama "develop".

        git checkout -b feature/incapacidades  # Crea y cambia a la rama "feature/incapacidades" para desarrollar el m√≥dulo de incapacidades.
        git push --set-upstream origin feature/incapacidades  # Sube la rama al remoto y la vincula para futuros push/pull.

        git checkout develop  # Vuelve a la rama "develop".

        git checkout -b feature/vacaciones  # Crea y cambia a la rama "feature/vacaciones" para desarrollar el m√≥dulo de vacaciones.
        git push --set-upstream origin feature/vacaciones  # Sube la rama al remoto y la vincula para futuros push/pull.

        git checkout develop  # Vuelve a la rama "develop".

        git checkout -b feature/login  # Crea y cambia a la rama "feature/login" para desarrollar el m√≥dulo de login.
        git push --set-upstream origin feature/login  # Sube la rama al remoto y la vincula para futuros push/pull.



*********************************************************************************************************************************************************************************************



Pasos para sincronizar todas las ramas sin fusionarlas


    # Obtener todas las actualizaciones del remoto
        git fetch --all  

    # Actualizar cada rama sin hacer merge
        git checkout develop
        git pull origin develop --rebase  # Trae los √∫ltimos cambios de develop

        git checkout feature/incapacidades
        git pull origin feature/incapacidades --rebase  # Actualiza sin fusionar

        git checkout feature/vacaciones
        git pull origin feature/vacaciones --rebase  # Actualiza sin fusionar

        git checkout feature/login
        git pull origin feature/login --rebase  # Actualiza sin fusionar




*********************************************************************************************************************************************************************************************